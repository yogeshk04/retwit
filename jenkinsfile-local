pipeline {
    agent any
    environment {
        GIT_COMMAND = '"C:\\Program Files\\Git\\bin\\bash.exe"'
        KUBECTL_COMMAND = 'kubectl'
        KUBECONFIG_PATH = 'C:\\Users\\diTrinity_112\\.kube\\config'
        MANIFESTS_PATH = 'C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\local-deployment\\manifest'
        BE_DOCKER_FILE = 'C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\local-deployment\\backend'
        FE_DOCKER_FILE = 'C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\local-deployment\\frontend'

        DOCKER_REGISTRY_URL = 'https://index.docker.io/v1/'
        DOCKER_REGISTRY_CREDENTIALS_ID = 'DOCKER_REGISTRY_CREDENTIALS_ID'
        DOCKERHUB_REPO_URL = 'yogeshk04/'
    }
    stages {
        stage('Stage 1: Clone Repository') {
            steps {
                script {
                    git 'https://github.com/yogeshk04/retwit.git'
                }
            }
        }

        stage('Stage 2: Build backend docker image') {
            steps {
                script {
                    dir("${env.BE_DOCKER_FILE}") {
                        bat "docker build -t yogeshk04/backend ."
                    }
                }
            }
        }

        stage('Stage 3: Build frontend docker image') {
            steps {
                script {
                    dir("${env.FE_DOCKER_FILE}") {
                        bat "docker build -t yogeshk04/frontend ."
                    }
                }
            }
        }

        stage('Stage 4: Docker login') {
            steps {
                script {
                    withDockerRegistry(credentialsId: env.DOCKER_REGISTRY_CREDENTIALS_ID, url: env.DOCKER_REGISTRY_URL) {
                        // Docker login is handled automatically
                    }
                }
            }
        }

        stage('Stage 5: Docker push images to DockerHub') {
            steps {
                script {
                    bat "docker push yogeshk04/backend"
                    bat "docker push yogeshk04/frontend"
                }
            }
        }

        stage('Stage 6: Deploy to Kubernetes cluster') {
            steps {
                script {
                    // Set KUBECONFIG for kubectl
                    withEnv(["KUBECONFIG=${env.KUBECONFIG_PATH}"]) {
                       dir("${env.MANIFESTS_PATH}") {
                            bat "${env.KUBECTL_COMMAND} apply -f ."
                        }
                    }
                }
            }
        }

        // Add more stages as needed for your build process
    }

    post {
        success {
            echo 'Build successful!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}
